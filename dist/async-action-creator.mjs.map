{"version":3,"file":"async-action-creator.mjs","sources":["../src/actionCreator.js","../src/utils.js","../src/reducer.js"],"sourcesContent":["// @flow\n\nimport type {asyncReducerType} from './reducer'\n\ntype asyncState = {\n  [name: string]: ?any,\n  async: asyncReducerType\n}\n\ntype asyncAction = {\n  type: string,\n  start: (payload: ?any) => {type: string, payload: any},\n  success: (payload: ?any) => {type: string, payload: any},\n  failure: (payload: ?any) => {type: string, payload: any},\n  getStatus: (state: asyncState) => string,\n  getError: (state: asyncState) => ?string,\n  getResponse: (state: asyncState) => ?any,\n  clearStatus: () => void,\n  START: string,\n  SUCCESS: string,\n  FAILURE: string\n}\n\n/**\n * Creates an async action\n * @param {string} type\n * @return {object} asyncAction\n */\nexport const makeAction = (type: string): asyncAction => ({\n  type,\n  run: payload => ({type, payload}),\n  start: payload => ({type: `${type}_START`, payload}),\n  success: payload => ({type: `${type}_SUCCESS`, payload}),\n  failure: payload => ({type: `${type}_FAILURE`, payload}),\n  getStatus: ({async}: asyncState) => async[type] ? async[type].status : 'init',\n  getError: ({async}: asyncState) => async[type] ? async[type].error : null,\n  getResponse: ({async}: asyncState) => async[type] ? async[type].response : null,\n  clearStatus: ({async}: asyncState) => ({type: '@@actionCreator/CLEAR_STATUS', namespace: type}),\n  START: `${type}_START`,\n  SUCCESS: `${type}_SUCCESS`,\n  FAILURE: `${type}_FAILURE`\n})\n\nexport default makeAction\n","/**\n * Checks if the action dispatched is async or not\n * @param {object} action\n * @return {boolean} response\n */\nexport const isAsync = ({type}) => ['START', 'SUCCESS', 'FAILURE'].indexOf(type.slice(type.lastIndexOf('_') + 1)) >= 0\n\n/**\n * Split the action in type name and async status\n * @param {object} action\n * @return {object} splited action\n */\nexport const divideAction = ({type}) => ({\n  type: type.slice(0, type.lastIndexOf('_')),\n  status: type.slice(type.lastIndexOf('_') + 1)\n})\n\n/**\n * Returns the next status according to the action type\n * @param {string} type\n * @return {string} status\n */\nexport const getStatus = status => {\n  switch (status) {\n    case 'START':\n      return 'pending'\n    case 'SUCCESS':\n      return 'success'\n    case 'FAILURE':\n      return 'failure'\n    default:\n      return 'init'\n  }\n}\n\n/**\n * Returns the payload sent and returns null if there isn't any\n * @param {object} action\n * @return {string} status\n */\nexport const getResponse = ({payload}) => {\n  if (payload) return payload\n  else return null\n}\n\n/**\n * Returns the error and returns null if there isn't any\n * @param {object} action\n * @return {string} status\n */\nexport const getError = ({payload}) => {\n  if (payload) return payload\n  else return null\n}","// @flow\n\nimport {divideAction, getError, getStatus, isAsync, getResponse} from './utils'\n\ntype standardAction = {\n  type: string,\n  payload: any\n}\n\nexport type asyncReducerType = {\n  [name: string]: {\n    status: string,\n    error: ?string,\n    response: ?any\n  }\n}\n\n/**\n * Creates the action creator reducer\n * @param {object} initial state\n * @param {object} action\n * @return {object} new state\n */\nconst asyncReducer = (state: asyncReducerType = {}, action: standardAction): asyncReducerType => {\n  if (isAsync(action)) {\n    const {type, status} = divideAction(action)\n    return Object.assign({}, state, {\n      [type]: {\n        status: getStatus(status),\n        error: status === 'FAILURE' ? getError(action) : null,\n        response: status === 'SUCCESS' ? getResponse(action) : null\n      }\n    })\n  } else if (action.type === '@@actionCreator/CLEAR_STATUS') {\n    return Object.assign({}, state, {\n      [action.namespace]: undefined\n    })\n  } else {\n    return state\n  }\n}\n\nexport default asyncReducer\n"],"names":["makeAction","type","payload","async","status","error","response","namespace","isAsync","indexOf","slice","lastIndexOf","divideAction","getStatus","getResponse","getError","asyncReducer","state","action","Object","assign","undefined"],"mappings":"AAuBA;;;;;AAKA,AAAO,IAAMA,aAAa,SAAbA,UAAa,CAACC,IAAD;SAAgC;cAAA;SAEnD;aAAY,EAACA,UAAD,EAAOC,gBAAP,EAAZ;KAFmD;WAGjD;aAAY,EAACD,MAASA,IAAT,WAAD,EAAwBC,gBAAxB,EAAZ;KAHiD;aAI/C;aAAY,EAACD,MAASA,IAAT,aAAD,EAA0BC,gBAA1B,EAAZ;KAJ+C;aAK/C;aAAY,EAACD,MAASA,IAAT,aAAD,EAA0BC,gBAA1B,EAAZ;KAL+C;eAM7C;UAAEC,KAAF,QAAEA,KAAF;aAAyBA,MAAMF,IAAN,IAAcE,MAAMF,IAAN,EAAYG,MAA1B,GAAmC,MAA5D;KAN6C;cAO9C;UAAED,KAAF,SAAEA,KAAF;aAAyBA,MAAMF,IAAN,IAAcE,MAAMF,IAAN,EAAYI,KAA1B,GAAkC,IAA3D;KAP8C;iBAQ3C;UAAEF,KAAF,SAAEA,KAAF;aAAyBA,MAAMF,IAAN,IAAcE,MAAMF,IAAN,EAAYK,QAA1B,GAAqC,IAA9D;KAR2C;iBAS3C;UAAEH,KAAF,SAAEA,KAAF;aAA0B,EAACF,MAAM,8BAAP,EAAuCM,WAAWN,IAAlD,EAA1B;KAT2C;WAU9CA,IAAV,WAVwD;aAW5CA,IAAZ,aAXwD;aAY5CA,IAAZ;GAZwB;CAAnB,CAeP;;AC3CA;;;;;AAKA,AAAO,IAAMO,UAAU,SAAVA,OAAU;MAAEP,IAAF,QAAEA,IAAF;SAAY,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,EAAgCQ,OAAhC,CAAwCR,KAAKS,KAAL,CAAWT,KAAKU,WAAL,CAAiB,GAAjB,IAAwB,CAAnC,CAAxC,KAAkF,CAA9F;CAAhB;;;;;;;AAOP,AAAO,IAAMC,eAAe,SAAfA,YAAe;MAAEX,IAAF,SAAEA,IAAF;SAAa;UACjCA,KAAKS,KAAL,CAAW,CAAX,EAAcT,KAAKU,WAAL,CAAiB,GAAjB,CAAd,CADiC;YAE/BV,KAAKS,KAAL,CAAWT,KAAKU,WAAL,CAAiB,GAAjB,IAAwB,CAAnC;GAFkB;CAArB;;;;;;;AAUP,AAAO,IAAME,YAAY,SAAZA,SAAY,SAAU;UACzBT,MAAR;SACO,OAAL;aACS,SAAP;SACG,SAAL;aACS,SAAP;SACG,SAAL;aACS,SAAP;;aAEO,MAAP;;CATC;;;;;;;AAkBP,AAAO,IAAMU,cAAc,SAAdA,WAAc,QAAe;MAAbZ,OAAa,SAAbA,OAAa;;MACpCA,OAAJ,EAAa,OAAOA,OAAP,CAAb,KACK,OAAO,IAAP;CAFA;;;;;;;AAUP,AAAO,IAAMa,WAAW,SAAXA,QAAW,QAAe;MAAbb,OAAa,SAAbA,OAAa;;MACjCA,OAAJ,EAAa,OAAOA,OAAP,CAAb,KACK,OAAO,IAAP;CAFA;;;;;;;;;;;;;;;;;ACjCP;;;;;;AAMA,IAAMc,eAAe,SAAfA,YAAe,GAA4E;MAA3EC,KAA2E,uEAAjD,EAAiD;MAA7CC,MAA6C;;MAC3FV,QAAQU,MAAR,CAAJ,EAAqB;wBACIN,aAAaM,MAAb,CADJ;QACZjB,KADY,iBACZA,IADY;QACNG,OADM,iBACNA,MADM;;WAEZe,OAAOC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,qBACJhB,KADI,EACG;cACEY,UAAUT,OAAV,CADF;aAECA,YAAW,SAAX,GAAuBW,SAASG,MAAT,CAAvB,GAA0C,IAF3C;gBAGId,YAAW,SAAX,GAAuBU,YAAYI,MAAZ,CAAvB,GAA6C;KAJpD,EAAP;GAFF,MASO,IAAIA,OAAOjB,IAAP,KAAgB,8BAApB,EAAoD;WAClDkB,OAAOC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,qBACJC,OAAOX,SADH,EACec,SADf,EAAP;GADK,MAIA;WACEJ,KAAP;;CAfJ,CAmBA;;"}